{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x0c731E5E533f6B660aD3313CE96d1194073A1e05",
      "txHash": "0xa8bbc516066fe26b514fe98c9a766aa5e4873e60750fbc58df9e4439fb520935",
      "kind": "uups"
    },
    {
      "address": "0x948e00E3c38b714246814727e3DA84ab6A6C2486",
      "txHash": "0x14e033e810e60fa84d88c2b250f4333e5c42343a12b466b3849f396145ae97f3",
      "kind": "uups"
    },
    {
      "address": "0x3f5272244e89F26D598Bbb7d4684e27f73708146",
      "txHash": "0x485fe16c9f986f80b70a2538b8411283bae352e0bc917c9bc5c733c41a44d52b",
      "kind": "uups"
    },
    {
      "address": "0xA44D2904B31A078acFE6225b49df9ae31A0D169B",
      "txHash": "0x85a54a310924327909ad45d1e6ebf29d8399dc95baa5a5ce2d54a5079f67c333",
      "kind": "uups"
    }
  ],
  "impls": {
    "1102d9acc594d7e6cbfe28773f7a92215028f24291d2364aefa265a9f5ad1a98": {
      "address": "0x7f6A192d690BF5A4762485f3DdD8D8b65cfF627e",
      "txHash": "0x72cb641a1833ac65b8a21f58ee9b7cbf3449b569a0c13292edcc1b9d5d184b47",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(EtherfiUnstakeQueue)1649_storage)": {
            "label": "mapping(address => struct EtherfiAdapterConfigStorage.EtherfiUnstakeQueue)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarginlyConfig)2045_storage)": {
            "label": "mapping(address => struct MarginlyAdapterConfigStorage.MarginlyConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfig)2033_storage)": {
            "label": "mapping(address => struct MarginlyAdapterConfigStorage.PoolConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_struct(QueueItem)1639_storage)": {
            "label": "mapping(uint128 => struct EtherfiAdapterConfigStorage.QueueItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_address)": {
            "label": "mapping(uint32 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(AaveAdapterConfig)1512_storage": {
            "label": "struct AaveAdapterConfigStorage.AaveAdapterConfig",
            "members": [
              {
                "label": "aavePool",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EtherfiAdapterConfig)1676_storage": {
            "label": "struct EtherfiAdapterConfigStorage.EtherfiAdapterConfig",
            "members": [
              {
                "label": "_weth9",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_weeth",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_marginlyRouter",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_weethEthPriceOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_vaults",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_avgPricesByVault",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_unstakeQueue",
                "type": "t_mapping(t_address,t_struct(EtherfiUnstakeQueue)1649_storage)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_pendingWithdrawals",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(EtherfiUnstakeQueue)1649_storage": {
            "label": "struct EtherfiAdapterConfigStorage.EtherfiUnstakeQueue",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "items",
                "type": "t_mapping(t_uint128,t_struct(QueueItem)1639_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InitializableStorage)141_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarginlyAdapterConfigs)2052_storage": {
            "label": "struct MarginlyAdapterConfigStorage.MarginlyAdapterConfigs",
            "members": [
              {
                "label": "_configs",
                "type": "t_mapping(t_address,t_struct(MarginlyConfig)2045_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarginlyConfig)2045_storage": {
            "label": "struct MarginlyAdapterConfigStorage.MarginlyConfig",
            "members": [
              {
                "label": "_countOfPools",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_poolConfigs",
                "type": "t_mapping(t_address,t_struct(PoolConfig)2033_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_poolByIndex",
                "type": "t_mapping(t_uint32,t_address)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)74_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PoolConfig)2033_storage": {
            "label": "struct MarginlyAdapterConfigStorage.PoolConfig",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isQuote",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(QueueItem)1639_storage": {
            "label": "struct EtherfiAdapterConfigStorage.QueueItem",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:levva-vault.config.EtherfiAdapterConfig": [
            {
              "contract": "EtherfiAdapterConfigStorage",
              "label": "_weth9",
              "type": "t_address",
              "src": "contracts/protocols/etherfi/EtherfiAdapterConfigStorage.sol:34",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EtherfiAdapterConfigStorage",
              "label": "_weeth",
              "type": "t_address",
              "src": "contracts/protocols/etherfi/EtherfiAdapterConfigStorage.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EtherfiAdapterConfigStorage",
              "label": "_marginlyRouter",
              "type": "t_address",
              "src": "contracts/protocols/etherfi/EtherfiAdapterConfigStorage.sol:36",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EtherfiAdapterConfigStorage",
              "label": "_weethEthPriceOracle",
              "type": "t_address",
              "src": "contracts/protocols/etherfi/EtherfiAdapterConfigStorage.sol:37",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "EtherfiAdapterConfigStorage",
              "label": "_vaults",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/protocols/etherfi/EtherfiAdapterConfigStorage.sol:39",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "EtherfiAdapterConfigStorage",
              "label": "_avgPricesByVault",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/protocols/etherfi/EtherfiAdapterConfigStorage.sol:40",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "EtherfiAdapterConfigStorage",
              "label": "_unstakeQueue",
              "type": "t_mapping(t_address,t_struct(EtherfiUnstakeQueue)1649_storage)",
              "src": "contracts/protocols/etherfi/EtherfiAdapterConfigStorage.sol:41",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "EtherfiAdapterConfigStorage",
              "label": "_pendingWithdrawals",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/protocols/etherfi/EtherfiAdapterConfigStorage.sol:43",
              "offset": 0,
              "slot": "7"
            }
          ],
          "erc7201:levva-vault.MarginlyAdapterConfigs": [
            {
              "contract": "MarginlyAdapterConfigStorage",
              "label": "_configs",
              "type": "t_mapping(t_address,t_struct(MarginlyConfig)2045_storage)",
              "src": "contracts/protocols/marginly/MarginlyAdapterConfigStorage.sol:34",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:levva-vault.config.AaveAdapterConfig": [
            {
              "contract": "AaveAdapterConfigStorage",
              "label": "aavePool",
              "type": "t_address",
              "src": "contracts/protocols/aave/AaveAdapterConfigStorage.sol:15",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "86956bc50a2eb71b9ae6181cc920c8d557c7acca30e3337e03c437d97f367d13": {
      "address": "0x27f519d608cC33533801bDDfD7635B6cD12878A6",
      "txHash": "0x355133dc4fd241c8683bc1a2c0c7a7820307020a056fa0ea34efb11c365ac980",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(ProtocolType)2122": {
            "label": "enum ProtocolType",
            "members": [
              "Marginly",
              "Aave",
              "Etherfi",
              "ProtocolTypeLength"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(ProtocolType)2122,t_address)": {
            "label": "mapping(enum ProtocolType => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ConfigManagerData)1564_storage": {
            "label": "struct ConfigManagerStorage.ConfigManagerData",
            "members": [
              {
                "label": "configManager",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)295_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)141_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LendingAdaptersData)1936_storage": {
            "label": "struct LendingAdaptersStorage.LendingAdaptersData",
            "members": [
              {
                "label": "_protocolAdapters",
                "type": "t_mapping(t_enum(ProtocolType)2122,t_address)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)74_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(VaultStorage)1635_storage": {
            "label": "struct ERC4626Vault.VaultStorage",
            "members": [
              {
                "label": "_asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_decimalsOffset",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "_totalDeposited",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_freeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_cachedTotalLent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_totalUpdatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_vaultManagers",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:levva-vault.ConfigManagerData": [
            {
              "contract": "ConfigManagerStorage",
              "label": "configManager",
              "type": "t_address",
              "src": "contracts/base/ConfigManagerStorage.sol:15",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:levva-vault.LendingAdaptersData": [
            {
              "contract": "LendingAdaptersStorage",
              "label": "_protocolAdapters",
              "type": "t_mapping(t_enum(ProtocolType)2122,t_address)",
              "src": "contracts/base/LendingAdaptersStorage.sol:15",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:levva-vault.VaultStorage": [
            {
              "contract": "ERC4626Vault",
              "label": "_asset",
              "type": "t_address",
              "src": "contracts/base/ERC4626Vault.sol:26",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Vault",
              "label": "_decimalsOffset",
              "type": "t_uint8",
              "src": "contracts/base/ERC4626Vault.sol:28",
              "offset": 20,
              "slot": "0"
            },
            {
              "contract": "ERC4626Vault",
              "label": "_totalDeposited",
              "type": "t_uint256",
              "src": "contracts/base/ERC4626Vault.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC4626Vault",
              "label": "_freeAmount",
              "type": "t_uint256",
              "src": "contracts/base/ERC4626Vault.sol:33",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC4626Vault",
              "label": "_cachedTotalLent",
              "type": "t_uint256",
              "src": "contracts/base/ERC4626Vault.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC4626Vault",
              "label": "_totalUpdatedAt",
              "type": "t_uint256",
              "src": "contracts/base/ERC4626Vault.sol:35",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC4626Vault",
              "label": "_vaultManagers",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/base/ERC4626Vault.sol:37",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
